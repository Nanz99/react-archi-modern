{"version":3,"sources":["assets/images/bread4.jpg","features/Cart/components/CartColumn/CartColumn.js","features/Cart/components/CartItem/CartItem.js","features/Cart/components/CartTotals/CartTotals.js","features/Cart/components/CartContent/CartContent.js","features/Cart/page/Cart.js","helpers/helpers.js","components/Breadcrumb/Breadcrumb.js"],"names":["CartColumn","className","React","memo","CartItem","id","image","name","color","price","amount","dispatch","useDispatch","src","alt","style","background","formatPrice","type","onClick","toggleAmount","value","removeItem","CartTotals","useSelector","state","cart","total_amount","shipping_fee","to","CartContent","length","map","item","clearCart","Cart","Breadcrumb","title","bgImg","cartImg","number","Intl","NumberFormat","currency","format","getUniqueValues","data","unique","flat","Set","product","backgroundImage"],"mappings":"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","file":"static/js/6.556b085f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bread4.d79e7be7.jpg\";","import React from 'react'\r\nimport './CartColumn.style.scss'\r\n\r\nfunction CartColumn() {\r\n   return (\r\n      <div className=\"cart__column\">\r\n          <div className='content'>\r\n        <h5>item</h5>\r\n        <h5>price</h5>\r\n        <h5>quantity</h5>\r\n        <h5>subtotal</h5>\r\n        <span></span>\r\n      </div>\r\n      <hr />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default React.memo(CartColumn)\r\n","import React from \"react\"\r\nimport \"./CartItem.style.scss\"\r\nimport { FaMinus, FaPlus, FaTrash } from \"react-icons/fa\"\r\nimport { removeItem, toggleAmount } from \"features/Cart/CartSlice\"\r\nimport { formatPrice } from \"helpers/helpers\"\r\nimport { useDispatch } from \"react-redux\"\r\nconst CartItem = ({ id, image, name, color, price, amount }) => {\r\n   const dispatch = useDispatch()\r\n   const increase = () => {\r\n      let value = \"inc\"\r\n      dispatch(toggleAmount({id,value}))\r\n   }\r\n   const decrease = () => {\r\n      let value= \"dec\"\r\n      dispatch(toggleAmount({id,value}))\r\n   }\r\n   return (\r\n      <div className=\"cart__item\">\r\n         <div className=\"title\">\r\n            <img src={image} alt={name} />\r\n            <div>\r\n               <h5 className=\"name\">{name}</h5>\r\n               <p className=\"color\">\r\n                  color :\r\n                  <span style={{ background: color }} />\r\n               </p>\r\n               <h5 className=\"price-small\">{formatPrice(price)}</h5>\r\n            </div>\r\n         </div>\r\n         <h5 className=\"price\">{formatPrice(price)}</h5>\r\n         <div className=\"amount-btns\">\r\n            <button type=\"button\" className=\"amount-btn\" onClick={decrease}>\r\n               <FaMinus />\r\n            </button>\r\n            <h2 className=\"amount\">{amount}</h2>\r\n            <button type=\"button\" className=\"amount-btn\" onClick={increase}>\r\n               <FaPlus />\r\n            </button>\r\n         </div>\r\n         <h5 className=\"subtotal\">{formatPrice(price * amount)}</h5>\r\n         <button\r\n            className=\"remove-btn\"\r\n            onClick={() => dispatch(removeItem(id))}\r\n         >\r\n            <FaTrash />\r\n         </button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default React.memo(CartItem)\r\n","import { formatPrice } from \"helpers/helpers\"\r\nimport React from \"react\"\r\nimport \"./CartTotals.style.scss\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction CartTotals() {\r\n   const { total_amount, shipping_fee } = useSelector(state => state.cart)\r\n   const myUser = true\r\n   return (\r\n      <div className=\"cart__totals\">\r\n         <div>\r\n            <article>\r\n               <h5>\r\n                  subtotal :<span>{formatPrice(total_amount)}</span>\r\n               </h5>\r\n               <p>\r\n                  shipping fee :<span>{formatPrice(shipping_fee)}</span>\r\n               </p>\r\n               <hr />\r\n               <h4>\r\n                  order total :\r\n                  <span>{formatPrice(total_amount + shipping_fee)}</span>\r\n               </h4>\r\n            </article>\r\n            {myUser ? (\r\n               <Link to=\"/\" className=\"btn\">\r\n                  proceed to checkout\r\n               </Link>\r\n            ) : (\r\n               <button className=\"btn\">login</button>\r\n            )}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default React.memo(CartTotals)\r\n","import React from \"react\"\r\nimport CartColumn from \"../CartColumn/CartColumn\"\r\nimport CartItem from \"../CartItem/CartItem\"\r\nimport CartTotals from \"../CartTotals/CartTotals\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { clearCart } from \"features/Cart/CartSlice\"\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport './CartContent.style.scss'\r\nfunction CartContent() {\r\n   const dispatch = useDispatch()\r\n   const { cart } = useSelector(state => state.cart)\r\n   if (cart.length < 1) {\r\n      return (\r\n         <section className=\"page-100\">\r\n            <div className=\"empty\">\r\n               <h2>Your cart is empty</h2>\r\n               <Link to=\"/products\" className=\"btn-empty\">\r\n                  fill it\r\n               </Link>\r\n            </div>\r\n         </section>\r\n      )\r\n   }\r\n   return (\r\n      <div className=\"section section-center container\">\r\n         <CartColumn />\r\n         {cart.map(item => {\r\n            return <CartItem key={item.id} {...item} />\r\n         })}\r\n         <hr />\r\n         <div className=\"link-container\">\r\n            <Link to=\"/products\" className=\"link-btn\">\r\n               continue shopping\r\n            </Link>\r\n            <button\r\n               type=\"button\"\r\n               className=\"link-btn clear-btn\"\r\n               onClick={() => dispatch(clearCart())}\r\n            >\r\n               clear shopping cart\r\n            </button>\r\n         </div>\r\n         <CartTotals />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default React.memo(CartContent)\r\n","import Breadcrumb from \"components/Breadcrumb/Breadcrumb\"\r\nimport React from \"react\"\r\nimport cartImg from \"../../../assets/images/bread4.jpg\"\r\nimport './Cart.style.scss'\r\nimport CartContent from \"../components/CartContent/CartContent\"\r\n\r\nfunction Cart() {\r\n   return (\r\n      <main>\r\n         <Breadcrumb title=\"cart\" bgImg={cartImg} />\r\n         <section className=\"cart__content page\">\r\n            <CartContent/>\r\n         </section>\r\n      </main>\r\n   )\r\n}\r\nexport default React.memo(Cart)","export const formatPrice = (number) => {\r\n   return new Intl.NumberFormat('en-US', {\r\n     style: 'currency',\r\n     currency: 'USD',\r\n   }).format(number / 100)\r\n }\r\n \r\n export const getUniqueValues = (data, type) => {\r\n   let unique = data.map((item) => item[type])\r\n   if (type === 'colors') {\r\n     unique = unique.flat()\r\n   }\r\n \r\n   return ['all', ...new Set(unique)]\r\n }\r\n ","import React from \"react\"\r\nimport \"./Breadcrumb.style.scss\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\nfunction Breadcrumb({ title, product, bgImg }) {\r\n   return (\r\n      <div\r\n         className=\"breadcrumb__container\"\r\n         style={{\r\n            backgroundImage: ` url(${bgImg})`,\r\n         }}\r\n      >\r\n         <div className=\"breadcrumb__center\">\r\n            <h1>{title}</h1>\r\n            <p>\r\n               <Link to=\"/\">Home</Link>\r\n               {product && <Link to=\"/products\">/ Products</Link>}/ {title}\r\n            </p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default React.memo(Breadcrumb)\r\n"],"sourceRoot":""}